// Generated by CoffeeScript 1.7.1
(function() {
  $.fn.animateSortable = function(options) {
    var change, clones, items, list, start, stop;
    list = this;
    if (options.items != null) {
      items = this.find(options.items);
    } else {
      items = this.children();
    }
    options = options || {};
    start = options.start;
    stop = options.stop;
    change = options.change;
    options.items = '.sortable-item-helper';
    options.start = (function(_this) {
      return function(e, ui) {
        var item;
        item = ui.helper;
        item.addClass('exclude-item');
        list.addClass('show-clones');
        item.data('clone').hide();
        if (typeof start === "function") {
          return start(e, ui);
        }
      };
    })(this);
    options.stop = (function(_this) {
      return function(e, ui) {
        items.filter('.exclude-item').each(function() {
          var clone, item, position;
          item = $(this);
          clone = item.data('clone');
          position = item.position();
          clone.css({
            'left': position.left,
            'top': position.top
          });
          clone.show();
          return item.removeClass('exclude-item');
        });
        list.removeClass('show-clones');
        if (typeof stop === "function") {
          return stop(e, ui);
        }
      };
    })(this);
    options.change = (function(_this) {
      return function(e, ui) {
        var asdf;
        asdf = [];
        items.each(function() {
          var item;
          item = $(this);
          return asdf.push(item.children('div').children('span').text());
        });
        return items.each(function() {
          var clone, item, position;
          item = $(this);
          clone = item.data('clone');
          position = item.position();
          clone.css({
            'top': position.top,
            'left': position.left
          });
          if (typeof change === "function") {
            return change(e, ui);
          }
        });
      };
    })(this);
    this.css({
      position: 'relative'
    });
    items.each(function(i) {
      var clone, item, position;
      item = $(this);
      clone = item.clone();
      item.addClass('sortable-item-helper');
      item.data('clone', clone);
      position = item.position();
      clone.addClass('sortable-item-clone').css({
        'left': position.left,
        'top': position.top,
        'position': 'absolute',
        'width': item.outerWidth(),
        'height': item.outerHeight()
      }).attr("data-pos", i + 1);
      return item.after(clone);
    });
    clones = this.children('.sortable-item-clone');
    return this.sortable(options);
  };

}).call(this);
